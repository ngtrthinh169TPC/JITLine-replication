from nova . objects import instance as instance _ obj
instance = self . _ create _ instance ( obj = True )
console = conn . get _ vnc _ console ( self . context , instance )
instance = self . _ create _ instance ( obj = True )
console = conn . get _ vnc _ console ( self . context , instance )
instance = self . _ create _ instance ( obj = True , spawn = False )
instance . vm _ state = ' building '
conn . get _ vnc _ console , self . context , instance )
instance = self . _ create _ instance ( obj = True , spawn = False )
instance . vm _ state = ' rescued '
conn . get _ vnc _ console , self . context , instance )
def _ create _ instance ( self , instance _ id = 1 , spawn = True , obj = False , * * attrs ) :
instance _ values . update ( attrs )
if obj :
instance = instance _ obj . Instance . _ from _ db _ object (
self . context , instance _ obj . Instance ( ) , instance ,
expected _ attrs = instance _ obj . INSTANCE _ DEFAULT _ FIELDS )
