Copyright 2014 IBM Corp .

All Rights Reserved .

Licensed under the Apache License , Version 2 . 0 ( the `` License `` ) ; you may
not use this file except in compliance with the License . You may obtain
a copy of the License at

http : / / www . apache . org / licenses / LICENSE - 2 . 0

Unless required by applicable law or agreed to in writing , software
distributed under the License is distributed on an `` AS IS `` BASIS , WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . See the
License for the specific language governing permissions and limitations
under the License .

@ author : Mohammad Banikazemi , IBM Corp .
from neutron . openstack . common import log as logging
from neutron . plugins . ibm . common import constants
LOG = logging . getLogger ( _ _ name _ _ )
HTTP _ OK = 200
class FakeClient ( ) :
' ' ' Fake Client for SDNVE controller . ' ' '
def _ _ init _ _ ( self , * * kwargs ) :
LOG . info ( _ ( ' Fake SDNVE controller initialized ' ) )
def sdnve _ list ( self , resource , * * _ params ) :
LOG . info ( _ ( ' Fake SDNVE controller : list ' ) )
return ( HTTP _ OK , None )
def sdnve _ show ( self , resource , specific , * * _ params ) :
LOG . info ( _ ( ' Fake SDNVE controller : show ' ) )
return ( HTTP _ OK , None )
def sdnve _ create ( self , resource , body ) :
LOG . info ( _ ( ' Fake SDNVE controller : create ' ) )
return ( HTTP _ OK , None )
def sdnve _ update ( self , resource , specific , body = None ) :
LOG . info ( _ ( ' Fake SDNVE controller : update ' ) )
return ( HTTP _ OK , None )
def sdnve _ delete ( self , resource , specific ) :
LOG . info ( _ ( ' Fake SDNVE controller : delete ' ) )
return ( HTTP _ OK , None )
def sdnve _ get _ tenant _ byid ( self , id ) :
LOG . info ( _ ( ' Fake SDNVE controller : get tenant by id ' ) )
return id , constants . TENANT _ TYPE _ OF
def sdnve _ check _ and _ create _ tenant ( self , id , network _ type = None ) :
LOG . info ( _ ( ' Fake SDNVE controller : check and create tenant ' ) )
return id
def sdnve _ get _ controller ( self ) :
LOG . info ( _ ( ' Fake SDNVE controller : get controller ' ) )
return None
